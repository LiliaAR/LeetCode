/**
 * @param {number[]} nums
 * @param {number} target
 * @return {number[]}
 */
var twoSum = function(nums, target) {
    const map = new Map(); // Create a hash map to store seen values and their indices

    for (let i = 0; i < nums.length; i++) {
        const complement = target - nums[i];

        if (map.has(complement)) {
            return [map.get(complement), i]; // Return the indices if complement is found
        }

        map.set(nums[i], i); // Store the current value with its index
    }

    throw new Error("No solution exists"); // This should never happen due to the problem constraints
};
